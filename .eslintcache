[{"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\index.js":"1","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\App.js":"2","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\reportWebVitals.js":"3","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\custom-hooks\\usePosition.js":"4","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\demo.jsx":"5","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Transporter.jsx":"6","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Receiver.jsx":"7","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Components\\Marker.jsx":"8","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Admin.jsx":"9"},{"size":529,"mtime":1608974671594,"results":"10","hashOfConfig":"11"},{"size":497,"mtime":1609105587965,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1470,"mtime":1609069973636,"results":"14","hashOfConfig":"11"},{"size":1129,"mtime":1608983955440,"results":"15","hashOfConfig":"11"},{"size":4075,"mtime":1609166294724,"results":"16","hashOfConfig":"11"},{"size":1778,"mtime":1609166303333,"results":"17","hashOfConfig":"11"},{"size":921,"mtime":1609164385765,"results":"18","hashOfConfig":"11"},{"size":1874,"mtime":1609166273373,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1rng2ct",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"22"},"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\index.js",[],["44","45"],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\App.js",[],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\reportWebVitals.js",[],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\custom-hooks\\usePosition.js",["46"],"import { useState, useEffect } from 'react';\r\n\r\nconst defaultSettings = {\r\n    enableHighAccuracy: true,\r\n    timeout: Infinity,\r\n    maximumAge: 0,\r\n};\r\n\r\nexport const usePosition = (watch = false, settings = defaultSettings) => {\r\n    const [position, setPosition] = useState({});\r\n    const [error, setError] = useState(null);\r\n\r\n    const onChange = ({ coords, timestamp }) => {\r\n        setPosition({\r\n            latitude: coords.latitude,\r\n            longitude: coords.longitude,\r\n            accuracy: coords.accuracy,\r\n            speed: coords.speed,\r\n            timestamp,\r\n        });\r\n    };\r\n\r\n    const onError = (error) => {\r\n        setError(error.message);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('Accuracy = ', settings.enableHighAccuracy)\r\n\r\n        if (!navigator || !navigator.geolocation) {\r\n            setError('Geolocation is not supported');\r\n            return;\r\n        }\r\n\r\n        let watcher = null;\r\n        if (watch) {\r\n            console.log('watching position')\r\n            watcher =\r\n                navigator.geolocation.watchPosition(onChange, onError, settings);\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(onChange, onError, settings);\r\n        }\r\n\r\n        return () => watcher && navigator.geolocation.clearWatch(watcher);\r\n    }, [\r\n        settings.enableHighAccuracy,\r\n        settings.timeout,\r\n        settings.maximumAge,\r\n    ]);\r\n\r\n    return { ...position, error };\r\n};","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\demo.jsx",[],["47","48"],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Transporter.jsx",["49","50","51","52","53","54"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Badge,\r\n    Statistic\r\n} from 'antd';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport { usePosition } from '../custom-hooks/usePosition';\r\nimport GoogleMap from 'google-map-react';\r\nimport PropTypes from 'prop-types';\r\nimport io from 'socket.io-client';\r\nimport Marker from '../Components/Marker';\r\n//const socket = io('https://godview-server.herokuapp.com');\r\nconst socket = io(`${process.env.REACT_APP_SERVER}/user`, {\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\nconst socketV2 = io(`${process.env.REACT_APP_SERVER}/admin`, {\r\n    forceNew: true,\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\n\r\nconst Transporter = ({ watch, settings, location }) => {\r\n\r\n\r\n    const [zoom, setZoom] = useState(16);\r\n\r\n    const [marker, setMarker] = useState({\r\n        lat: 23.955413,\r\n        lng: 90.337844,\r\n    })\r\n\r\n    const {\r\n        latitude,\r\n        longitude,\r\n        timestamp,\r\n        accuracy,\r\n        speed,\r\n        error,\r\n    } = usePosition(true, settings);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let roomId = location.search.substring(1);\r\n        socket.emit('join-room', roomId);\r\n\r\n\r\n        return () => {\r\n            socket.on('disconnect');\r\n            socketV2.on('disconnect', 'theboss');\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(`Location was updated!`);\r\n        setMarker({\r\n            lat: latitude,\r\n            lng: longitude\r\n        })\r\n\r\n        let roomId = location.search.substring(1);\r\n\r\n\r\n        let data = {\r\n            lat: latitude,\r\n            lng: longitude\r\n        }\r\n        let data2 = {\r\n            lat: latitude,\r\n            lng: longitude,\r\n            username: roomId,\r\n            timestamp: timestamp\r\n        }\r\n\r\n\r\n        socket.emit('position', roomId, data);\r\n        socketV2.emit('position', data2);\r\n\r\n\r\n    }, [timestamp, latitude, longitude]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <h1 onClick={shamimBhai}>The new transporter page {marker.lat} , {marker.lng} </h1> */}\r\n            <div style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n\r\n                <div style={{ height: '30vh', padding: '2rem 4rem', display: 'flex', flexDirection: 'column', backgroundColor: '#171717' }}>\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Latitude: ${latitude}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Longitude: ${longitude}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Timestamp: ${timestamp}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Accuracy: ${accuracy && `${accuracy}m`}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Speed: ${speed}`} />\r\n                    <br />\r\n\r\n                    <span style={{ color: '#1890FF', fontSize: '16px', fontWeight: 700 }}>This is a beta of Godview, which is an under-construction geolocation tracking app engineered by Shamim Ferdous!</span>\r\n\r\n                    <br />\r\n                </div>\r\n\r\n                <div style={{ height: '700px', width: '100%' }}>\r\n                    <GoogleMap\r\n                        bootstrapURLKeys={{ key: 'AIzaSyCvv_c6oudIDXsjU5bVR7Y3uL_2mK1NcfU' }}\r\n                        //defaultCenter={center}\r\n                        defaultZoom={zoom}\r\n                        center={marker}\r\n                        yesIWantToUseGoogleMapApiInternals\r\n                    >\r\n                        <Marker\r\n                            lat={latitude}\r\n                            lng={longitude}\r\n                            username={location.search.substring(1)}\r\n                            timestamp={timestamp}\r\n                        />\r\n                    </GoogleMap>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Transporter;\r\n\r\n\r\nTransporter.propTypes = {\r\n    watch: PropTypes.bool,\r\n    settings: PropTypes.object,\r\n}\r\n\r\n\r\n","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Receiver.jsx",["55"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport GoogleMap from 'google-map-react';\r\nimport io from 'socket.io-client';\r\nimport { Badge } from \"antd\";\r\n// const socket = io('https://godview-server.herokuapp.com');\r\nconst socket = io(`${process.env.REACT_APP_SERVER}/user`, {\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Receiver = ({ location }) => {\r\n\r\n    console.log(`Receiver listening`)\r\n\r\n    const [transporter, setTransporter] = useState({\r\n        lat: 23.955413,\r\n        lng: 90.337844,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        let roomId = location.search.substring(1);\r\n\r\n        socket.emit('join-room', roomId);\r\n        socket.on('otherPositions', data => {\r\n            console.log(data);\r\n            setTransporter({\r\n                lat: data.lat,\r\n                lng: data.lng\r\n            })\r\n        })\r\n\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            <h1>The receiver page</h1>\r\n            <div style={{ height: '700px', width: '100%' }}>\r\n                <GoogleMap\r\n                    bootstrapURLKeys={{ key: 'AIzaSyCvv_c6oudIDXsjU5bVR7Y3uL_2mK1NcfU' }}\r\n                    //defaultCenter={center}\r\n                    defaultZoom={16}\r\n                    center={transporter}\r\n                >\r\n                    <AnyReactComponent\r\n                        lat={transporter.lat}\r\n                        lng={transporter.lng}\r\n                        text={transporter.lat + ', ' + transporter.lng}\r\n                    />\r\n                </GoogleMap>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Receiver;\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div className=\"dot\" style={{ color: 'red' }}>  <Badge status=\"error\" /> {text} </div>;","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Components\\Marker.jsx",[],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Admin.jsx",["56","57"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport GoogleMap from 'google-map-react';\r\nimport {\r\n    Badge\r\n} from 'antd';\r\nimport Marker from '../Components/Marker';\r\nimport io from 'socket.io-client';\r\nconst socketV2 = io(`${process.env.REACT_APP_SERVER}/admin`, {\r\n    forceNew: true,\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    const [transporters, setTransporters] = useState([]);\r\n    const center = {\r\n        lat: 23.774748799999998, lng: 90.36212019999999\r\n    }\r\n\r\n    useEffect(() => {\r\n        socketV2.on('otherPositions', (data) => {\r\n            console.log(data);\r\n\r\n            setTransporters(data);\r\n        });\r\n\r\n        return (() => {\r\n            socketV2.on('disconnect', 'the boss');\r\n        });\r\n    }, []);\r\n\r\n\r\n    const shamimBhai = () => {\r\n        console.log(transporters.length);\r\n    }\r\n\r\n    return (\r\n        <div style={{ height: '700px', width: '100%' }}>\r\n            <GoogleMap\r\n                bootstrapURLKeys={{ key: 'AIzaSyCvv_c6oudIDXsjU5bVR7Y3uL_2mK1NcfU' }}\r\n                //defaultCenter={center}\r\n                defaultZoom={16}\r\n                center={center}\r\n            >\r\n                {\r\n                    transporters.map(transporter => {\r\n                        return <Marker\r\n                            key={Math.random()}\r\n                            lat={transporter.lat}\r\n                            lng={transporter.lng}\r\n                            username={transporter.username}\r\n                            timestamp={transporter.timestamp}\r\n                        />\r\n                    })\r\n                }\r\n\r\n            </GoogleMap>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n\r\nconst AnyReactComponent = ({ text }) => <div className=\"dot\" style={{ color: 'red' }}>  <Badge status=\"error\" /> {text} </div>;",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":46,"column":8,"nodeType":"64","endLine":50,"endColumn":6,"suggestions":"65"},{"ruleId":"58","replacedBy":"66"},{"ruleId":"60","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":4,"column":5,"nodeType":"70","messageId":"71","endLine":4,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":6,"column":10,"nodeType":"70","messageId":"71","endLine":6,"endColumn":22},{"ruleId":"68","severity":1,"message":"73","line":30,"column":18,"nodeType":"70","messageId":"71","endLine":30,"endColumn":25},{"ruleId":"68","severity":1,"message":"74","line":43,"column":9,"nodeType":"70","messageId":"71","endLine":43,"endColumn":14},{"ruleId":"62","severity":1,"message":"75","line":57,"column":8,"nodeType":"64","endLine":57,"endColumn":10,"suggestions":"76"},{"ruleId":"62","severity":1,"message":"75","line":87,"column":8,"nodeType":"64","endLine":87,"endColumn":40,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"75","line":40,"column":8,"nodeType":"64","endLine":40,"endColumn":10,"suggestions":"78"},{"ruleId":"68","severity":1,"message":"79","line":38,"column":11,"nodeType":"70","messageId":"71","endLine":38,"endColumn":21},{"ruleId":"68","severity":1,"message":"80","line":69,"column":7,"nodeType":"70","messageId":"71","endLine":69,"endColumn":24},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'settings' and 'watch'. Either include them or remove the dependency array.","ArrayExpression",["83"],["81"],["82"],"no-unused-vars","'Statistic' is defined but never used.","Identifier","unusedVar","'LikeOutlined' is defined but never used.","'setZoom' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["84"],["85"],["86"],"'shamimBhai' is assigned a value but never used.","'AnyReactComponent' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"89","fix":"93"},"Update the dependencies array to be: [settings.enableHighAccuracy, settings.timeout, settings.maximumAge, settings, watch]",{"range":"94","text":"95"},"Update the dependencies array to be: [location.search]",{"range":"96","text":"97"},"Update the dependencies array to be: [timestamp, latitude, longitude, location.search]",{"range":"98","text":"99"},{"range":"100","text":"97"},[1323,1426],"[settings.enableHighAccuracy, settings.timeout, settings.maximumAge, settings, watch]",[1314,1316],"[location.search]",[1894,1926],"[timestamp, latitude, longitude, location.search]",[916,918]]