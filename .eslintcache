[{"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\index.js":"1","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\App.js":"2","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\reportWebVitals.js":"3","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\custom-hooks\\usePosition.js":"4","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\demo.jsx":"5","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Transporter.jsx":"6","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Receiver.jsx":"7","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Components\\Marker.jsx":"8","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Admin.jsx":"9","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Experiments.jsx":"10"},{"size":529,"mtime":1608974671594,"results":"11","hashOfConfig":"12"},{"size":611,"mtime":1609255249426,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1470,"mtime":1609069973636,"results":"15","hashOfConfig":"12"},{"size":1129,"mtime":1608983955440,"results":"16","hashOfConfig":"12"},{"size":4281,"mtime":1609183869737,"results":"17","hashOfConfig":"12"},{"size":1778,"mtime":1609166303333,"results":"18","hashOfConfig":"12"},{"size":1056,"mtime":1609183898327,"results":"19","hashOfConfig":"12"},{"size":2840,"mtime":1609183882139,"results":"20","hashOfConfig":"12"},{"size":3023,"mtime":1609263413291,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1rng2ct",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\index.js",[],["49","50"],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\App.js",[],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\reportWebVitals.js",[],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\custom-hooks\\usePosition.js",["51"],"import { useState, useEffect } from 'react';\r\n\r\nconst defaultSettings = {\r\n    enableHighAccuracy: true,\r\n    timeout: Infinity,\r\n    maximumAge: 0,\r\n};\r\n\r\nexport const usePosition = (watch = false, settings = defaultSettings) => {\r\n    const [position, setPosition] = useState({});\r\n    const [error, setError] = useState(null);\r\n\r\n    const onChange = ({ coords, timestamp }) => {\r\n        setPosition({\r\n            latitude: coords.latitude,\r\n            longitude: coords.longitude,\r\n            accuracy: coords.accuracy,\r\n            speed: coords.speed,\r\n            timestamp,\r\n        });\r\n    };\r\n\r\n    const onError = (error) => {\r\n        setError(error.message);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        console.log('Accuracy = ', settings.enableHighAccuracy)\r\n\r\n        if (!navigator || !navigator.geolocation) {\r\n            setError('Geolocation is not supported');\r\n            return;\r\n        }\r\n\r\n        let watcher = null;\r\n        if (watch) {\r\n            console.log('watching position')\r\n            watcher =\r\n                navigator.geolocation.watchPosition(onChange, onError, settings);\r\n        } else {\r\n            navigator.geolocation.getCurrentPosition(onChange, onError, settings);\r\n        }\r\n\r\n        return () => watcher && navigator.geolocation.clearWatch(watcher);\r\n    }, [\r\n        settings.enableHighAccuracy,\r\n        settings.timeout,\r\n        settings.maximumAge,\r\n    ]);\r\n\r\n    return { ...position, error };\r\n};","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\demo.jsx",[],["52","53"],"C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Transporter.jsx",["54","55","56","57","58","59"],"import React, { useState, useEffect } from 'react';\r\nimport {\r\n    Badge,\r\n    Statistic\r\n} from 'antd';\r\nimport { LikeOutlined } from '@ant-design/icons';\r\nimport { usePosition } from '../custom-hooks/usePosition';\r\nimport GoogleMap from 'google-map-react';\r\nimport PropTypes from 'prop-types';\r\nimport io from 'socket.io-client';\r\nimport Marker from '../Components/Marker';\r\n//const socket = io('https://godview-server.herokuapp.com');\r\nconst socket = io(`${process.env.REACT_APP_SERVER}/user`, {\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\nconst socketV2 = io(`${process.env.REACT_APP_SERVER}/admin`, {\r\n    forceNew: true,\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\n\r\nconst Transporter = ({ watch, settings, location }) => {\r\n\r\n\r\n    const [zoom, setZoom] = useState(16);\r\n\r\n    const [marker, setMarker] = useState({\r\n        lat: 23.955413,\r\n        lng: 90.337844,\r\n    })\r\n\r\n    const {\r\n        latitude,\r\n        longitude,\r\n        timestamp,\r\n        accuracy,\r\n        speed,\r\n        error,\r\n    } = usePosition(true, settings);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let roomId = location.search.substring(1);\r\n        socket.emit('join-room', roomId);\r\n\r\n\r\n        return () => {\r\n            socket.on('disconnect');\r\n            socketV2.on('disconnect', 'theboss');\r\n        }\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(`Location was updated!`);\r\n        setMarker({\r\n            lat: latitude,\r\n            lng: longitude\r\n        })\r\n\r\n        let roomId = location.search.substring(1);\r\n\r\n\r\n        let data = {\r\n            lat: latitude,\r\n            lng: longitude\r\n        }\r\n        let data2 = {\r\n            lat: latitude,\r\n            lng: longitude,\r\n            username: roomId,\r\n            timestamp: timestamp,\r\n            speed: speed,\r\n            accuracy: accuracy\r\n        }\r\n\r\n        console.log('Checking timestamp', accuracy);\r\n\r\n        socket.emit('position', roomId, data);\r\n        socketV2.emit('position', data2);\r\n\r\n\r\n    }, [timestamp, latitude, longitude]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <h1 onClick={shamimBhai}>The new transporter page {marker.lat} , {marker.lng} </h1> */}\r\n            <div style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n\r\n                <div style={{ height: '30vh', padding: '2rem 4rem', display: 'flex', flexDirection: 'column', backgroundColor: '#171717' }}>\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Latitude: ${latitude}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Longitude: ${longitude}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Timestamp: ${timestamp}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Accuracy: ${accuracy && `${accuracy}m`}`} />\r\n                    <Badge style={{ color: 'white' }} status=\"processing\" text={`Speed: ${speed}`} />\r\n                    <br />\r\n\r\n                    <span style={{ color: '#1890FF', fontSize: '16px', fontWeight: 700 }}>This is a beta of Godview, which is an under-construction geolocation tracking app engineered by Shamim Ferdous!</span>\r\n\r\n                    <br />\r\n                </div>\r\n\r\n                <div style={{ height: '700px', width: '100%' }}>\r\n                    <GoogleMap\r\n                        bootstrapURLKeys={{ key: 'AIzaSyCvv_c6oudIDXsjU5bVR7Y3uL_2mK1NcfU' }}\r\n                        //defaultCenter={center}\r\n                        defaultZoom={zoom}\r\n                        center={marker}\r\n                        yesIWantToUseGoogleMapApiInternals\r\n                    >\r\n                        <Marker\r\n                            lat={latitude}\r\n                            lng={longitude}\r\n                            username={location.search.substring(1)}\r\n                            timestamp={timestamp}\r\n                            accuracy={accuracy}\r\n                            speed={speed}\r\n                        />\r\n                    </GoogleMap>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Transporter;\r\n\r\n\r\nTransporter.propTypes = {\r\n    watch: PropTypes.bool,\r\n    settings: PropTypes.object,\r\n}\r\n\r\n\r\n","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Receiver.jsx",["60"],"import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport GoogleMap from 'google-map-react';\r\nimport io from 'socket.io-client';\r\nimport { Badge } from \"antd\";\r\n// const socket = io('https://godview-server.herokuapp.com');\r\nconst socket = io(`${process.env.REACT_APP_SERVER}/user`, {\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Receiver = ({ location }) => {\r\n\r\n    console.log(`Receiver listening`)\r\n\r\n    const [transporter, setTransporter] = useState({\r\n        lat: 23.955413,\r\n        lng: 90.337844,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        let roomId = location.search.substring(1);\r\n\r\n        socket.emit('join-room', roomId);\r\n        socket.on('otherPositions', data => {\r\n            console.log(data);\r\n            setTransporter({\r\n                lat: data.lat,\r\n                lng: data.lng\r\n            })\r\n        })\r\n\r\n\r\n    }, []);\r\n    return (\r\n        <>\r\n            <h1>The receiver page</h1>\r\n            <div style={{ height: '700px', width: '100%' }}>\r\n                <GoogleMap\r\n                    bootstrapURLKeys={{ key: 'AIzaSyCvv_c6oudIDXsjU5bVR7Y3uL_2mK1NcfU' }}\r\n                    //defaultCenter={center}\r\n                    defaultZoom={16}\r\n                    center={transporter}\r\n                >\r\n                    <AnyReactComponent\r\n                        lat={transporter.lat}\r\n                        lng={transporter.lng}\r\n                        text={transporter.lat + ', ' + transporter.lng}\r\n                    />\r\n                </GoogleMap>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Receiver;\r\n\r\n\r\nconst AnyReactComponent = ({ text }) => <div className=\"dot\" style={{ color: 'red' }}>  <Badge status=\"error\" /> {text} </div>;","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Components\\Marker.jsx",["61"],"import React from 'react';\r\nimport moment from 'moment';\r\n\r\nfunction Marker({ username, lat, lng, timestamp, accuracy, speed }) {\r\n    return (\r\n        <div className=\"dot\" style={{ color: 'red' }}>\r\n\r\n            <svg viewBox=\"0 0 24 24\" width={24} height={24} stroke=\"currentColor\" strokeWidth={2} fill=\"none\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"css-i6dzq1\"><path d=\"M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z\" /><circle cx={12} cy={10} r={3} /></svg>\r\n            <div className=\"marker-div\">\r\n                <span className=\"marker-span\">{`Name: ${username}`}</span>\r\n                <span className=\"marker-span\">{`Latitude: ${lat}`}</span>\r\n                <span className=\"marker-span\">{`Longitude: ${lng}`}</span>\r\n                <span className=\"marker-span\">{`Timestamp: ${timestamp}`}</span>\r\n                <span className=\"marker-span\">{`Accuracy: ${accuracy}`}</span>\r\n                <span className=\"marker-span\">{`Speed: ${speed}`}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Marker;","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Admin.jsx",["62","63"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport GoogleMap from 'google-map-react';\r\nimport {\r\n    Badge\r\n} from 'antd';\r\nimport Marker from '../Components/Marker';\r\nimport io from 'socket.io-client';\r\nconst socketV2 = io(`${process.env.REACT_APP_SERVER}/admin`, {\r\n    query: {\r\n        foo: 'bar'\r\n    }\r\n});\r\n\r\n\r\n\r\nconst Admin = () => {\r\n\r\n    const [transporters, setTransporters] = useState([]);\r\n    const [center, setCenter] = useState({\r\n        lat: 23.774748799999998, lng: 90.36212019999999\r\n    });\r\n\r\n    useEffect(() => {\r\n        socketV2.on('otherPositions', (data) => {\r\n\r\n            console.log(data[0].timestamp);\r\n\r\n            setTransporters(data);\r\n        });\r\n\r\n        return (() => {\r\n            socketV2.on('disconnect', 'the boss');\r\n        });\r\n    }, []);\r\n\r\n\r\n\r\n    //defining focusOnUser function\r\n    const focusOnUser = (lat, lng) => {\r\n        setCenter({\r\n            lat: lat,\r\n            lng: lng\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div style={{ height: '30vh', padding: '2rem 4rem', display: 'flex', flexDirection: 'column', backgroundColor: '#171717' }}>\r\n\r\n\r\n                <span style={{ color: '#1890FF', fontSize: '16px', fontWeight: 700 }}>Currect Active User: {transporters.length}</span>\r\n                {\r\n                    transporters.map(transporter => {\r\n                        return <a key={transporter.timestamp} onClick={() => focusOnUser(transporter.lat, transporter.lng)} style={{ textTransform: 'capitalize' }}>{transporter.username}</a>\r\n                    })\r\n                }\r\n\r\n                <br />\r\n            </div>\r\n            <div style={{ height: '700px', width: '100%' }}>\r\n                <GoogleMap\r\n                    bootstrapURLKeys={{ key: 'AIzaSyCvv_c6oudIDXsjU5bVR7Y3uL_2mK1NcfU' }}\r\n                    //defaultCenter={center}\r\n                    defaultZoom={16}\r\n                    center={center}\r\n                >\r\n                    {\r\n                        transporters.map(transporter => {\r\n                            return <Marker\r\n                                key={Math.random()}\r\n                                lat={transporter.lat}\r\n                                lng={transporter.lng}\r\n                                username={transporter.username}\r\n                                timestamp={transporter.timestamp}\r\n                                accuracy={transporter.accuracy}\r\n                                speed={transporter.speed}\r\n                            />\r\n                        })\r\n                    }\r\n\r\n                </GoogleMap>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Admin;\r\n\r\nconst AnyReactComponent = ({ text }) => <div className=\"dot\" style={{ color: 'red' }}>  <Badge status=\"error\" /> {text} </div>;","C:\\Users\\B A T  M A C H I N E\\Desktop\\Bat_Desk\\godview\\client\\src\\Views\\Experiments.jsx",["64","65"],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":46,"column":8,"nodeType":"72","endLine":50,"endColumn":6,"suggestions":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"68","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":4,"column":5,"nodeType":"78","messageId":"79","endLine":4,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":22},{"ruleId":"76","severity":1,"message":"81","line":30,"column":18,"nodeType":"78","messageId":"79","endLine":30,"endColumn":25},{"ruleId":"76","severity":1,"message":"82","line":43,"column":9,"nodeType":"78","messageId":"79","endLine":43,"endColumn":14},{"ruleId":"70","severity":1,"message":"83","line":57,"column":8,"nodeType":"72","endLine":57,"endColumn":10,"suggestions":"84"},{"ruleId":"70","severity":1,"message":"85","line":90,"column":8,"nodeType":"72","endLine":90,"endColumn":40,"suggestions":"86"},{"ruleId":"70","severity":1,"message":"83","line":40,"column":8,"nodeType":"72","endLine":40,"endColumn":10,"suggestions":"87"},{"ruleId":"76","severity":1,"message":"88","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"89","severity":1,"message":"90","line":56,"column":32,"nodeType":"91","endLine":56,"endColumn":165},{"ruleId":"76","severity":1,"message":"92","line":91,"column":7,"nodeType":"78","messageId":"79","endLine":91,"endColumn":24},{"ruleId":"76","severity":1,"message":"93","line":7,"column":14,"nodeType":"78","messageId":"79","endLine":7,"endColumn":29},{"ruleId":"76","severity":1,"message":"94","line":55,"column":11,"nodeType":"78","messageId":"79","endLine":55,"endColumn":26},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'settings' and 'watch'. Either include them or remove the dependency array.","ArrayExpression",["97"],["95"],["96"],"no-unused-vars","'Statistic' is defined but never used.","Identifier","unusedVar","'LikeOutlined' is defined but never used.","'setZoom' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'location.search'. Either include it or remove the dependency array.",["98"],"React Hook useEffect has missing dependencies: 'accuracy', 'location.search', and 'speed'. Either include them or remove the dependency array.",["99"],["100"],"'moment' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'AnyReactComponent' is assigned a value but never used.","'renderPolylines' is defined but never used.","'onChangeHandler' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"105","fix":"106"},{"desc":"103","fix":"107"},"Update the dependencies array to be: [settings.enableHighAccuracy, settings.timeout, settings.maximumAge, settings, watch]",{"range":"108","text":"109"},"Update the dependencies array to be: [location.search]",{"range":"110","text":"111"},"Update the dependencies array to be: [timestamp, latitude, longitude, location.search, speed, accuracy]",{"range":"112","text":"113"},{"range":"114","text":"111"},[1323,1426],"[settings.enableHighAccuracy, settings.timeout, settings.maximumAge, settings, watch]",[1314,1316],"[location.search]",[2008,2040],"[timestamp, latitude, longitude, location.search, speed, accuracy]",[916,918]]